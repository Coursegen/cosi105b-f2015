---
title: Good Practices
desc: How to get beyond disposable programs
homework: Read AND DO \\[POODR\\] Chapter 3; learn about "code smells" and point out two smells in your own solution to Movies-1
status: hidden
---
<%= homework_hdr %>
* Read \[POODR\] Chapter 3. Points to understand:
  * Gear and Wheel have several kinds of dependencies. What are they?
  * Why are dependencies bad?
  * How are things improved when (on page 41) wheel becomes an input to the initializer?
  * Why does she keep using the term "messages"?
  * What is dependency direction, how can it be changed, and how do you know which is preferred?
  * *You are required to do all the examples, by typing them in yourself and getting them to work. Remember that your work should be happening inside your <%= link_to_intro :portfolio %>.*
* Read about [Code Smells](http://martinfowler.com/bliki/CodeSmell.html) and [Code Smell](http://en.wikipedia.org/wiki/Code_smell) in wikipedia. Don't stop there. Google for Code Smells and find the most important and common ones. Examine your own <%= link_to_topic :pa_movies_1 %> and <%= deliverable "Point out two code smells." %>
* Begin working on <%= link_to_topic :pa_movies_2 %> in a directory called movies-2 in your <%= link_to_intro :portfolio %> like you did before

#### Homework discussion
* Questions I asked about POODR
* Reminder about the portfolio and how work there is graded

#### Do Post-it note exercise

<%= include_topic :good_programming %>
<%= include_topic :code_smells %>

#### Next Class
* Look at homework: <%= link_to_next_lecture %>
