---
title: Ruby and Intro to Object Oriented
desc: Getting into Objects and Classes in Ruby
homework: Continue Ruby the Hard Way \\[RHW\\] up to lesson 36. read AND DO \[POODR\] Chapter 1 and 2; complete PA movies-1.
---
#### Homework due for today

* Continue with [Learn Ruby The Hard Way](http://learnrubythehardway.org/book/preface.html). You should be at least up to Lesson 36. You will learn more about files (which you can use for your programming assignment too. Also we get into functions and control flow. The section ends with thoughts about design. Remember that your work should be happening inside your <%= link_to_intro :portfolio %>.
* Read "Practical Object Oriented Design in Ruby" \[POODR\] Chapter 1 and 2. Make sure you really understand the ruby syntax for defining classes and also try to answer for yourself what the "Single Responsibility Principle" is about, and why it is important. What are some ways in which you could check whether your class has a single responsibility? What do you think Sandi Metz means by "exemplary" code? What is her view of design? See if you can understand why she calls the "message" the foundation of Object Orientation. Do you know what she means by a "message"? Remember to do all the examples, by typing them in yourself and getting them to work. Remember that your work should be happening inside your <%= link_to_intro :portfolio %>.
* Continue <%= link_to_topic :pa_movies_1 %> and remember to apply what you've learned so far from the reading so far. Remember that your work should be happening inside your <%= link_to_intro :portfolio %> for it to be graded.

<%= callout("REMINDER", " Your portfolios will be reviewed and graded TODAY for progress.") %>

#### Homework discussion
* How did it go with the work? Who struggled, and what were some of the challenges?
* Lets take a look at some of the Portfolio code, either \[RTHW\] or Movies-1
* Does movie_data respect the single responsibility principle?
* Why does she talk about a 'message' and what does that mean? 

<%= include_topic :oo_design %>

#### Ruby Live Coding Demonstration and discussion
<%= include_ruby :classes_tut %>

#### Next Class
* Look at homework: <%= link_to_next_lecture %>
