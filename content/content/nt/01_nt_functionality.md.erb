---
title: nano Twitter Functionality
---

#### Functionality

* NanoTwitter (nT) is a baby version of Twitter designed as a platform for experimentation with scaling issues.
* Note that all the URLs, both for the User Interface and for the Web Services API will attempt to follow REST design principles as far as possible.

#### nT Functionality
* Users:
  * can register for an account by supplying an email a name and a password
  * are never deleted
* Logged in users
  * Can follow and unfollow other registered users
  * Can tweet
  * Can see the flow of the last n tweets by the users that they have followed
* Non-logged in users
  * See the flow of the last n tweets by any user
* Tweets
  * Consist of
    * a 140 characters of text
    * a date-time of creation
  * Belong to one user
  * Can never be deleted
* REST Api is provided
  * Retrieve the firehose of all tweets by all users
  * Retrieve the firehose for one specific user

#### nT User Interface
* Very basic bootstrappy html interface
* Non-logged-in root page (/)
  * Login link (/login)
  * Register for account link (/user/register)
  * List of the most recent 50 tweets, with link to tweeter's page
* Logged-in root page (/)
  * Logout link (/logout)
  * Box to submit a tweet (/tweet)
  * List of most recent 'n' tweets, with link to the tweeter's page
* Specific user's page (/user/name or /user/1234)
  * List of users tweets
  * Button to follow that user (available only if logged in)
  * If this is logged in users page, then also ability to tweet (i.e. equiv to /)
* Users' own profile page (/user/profile) 
  * Only when logged in, only for yourself
  * Your name, email
  * List of followed users

#### nT Web Services API
* REST-y API
  * All paths start with /api/v1
  * /tweets/23 - return tweet with id
  * /users/23 - return user information for user 23
  * /tweets/recent - return the recent n tweets
  * /users/23/tweets - return the users recent tweets

* Values as JSON
  * Tweet:
`{  "id": 123,
    "text": foobar,
    "created": jan-11-2015
}`
  * User: `{"id": name": Pito Salas}`
  * List of tweets: `\[<tweet>, <tweet>,...\]`
  * Follow list: `\["user_id": 22, "user_id": 23, ...\]`


#### New for Fall 2015
* /user/name or /user/1234, has
  * profile info
  * link to followed users (/user/x/follows)
  * Link to users own tweets (/user/x/tweets)

* Test Interface
  * /test/reset
    * if needed creates a new test user called "testuser"
    * if needed deletes all tweets that the "testuser" ever created
    * if needed delets all follows of the "testuser"
  * /test/tweets/1234
    * user testuser genereates 1234 new fake tweets
  * /test/follow/1234
    * 1234 randomly selected users follow user 1234




